{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///Users/keno/Documents/stickoscr.com/Sanity/Keno%20Projects/valentine-dev/src/app/%28site%29/%5Bslug%5D/page.js"],"sourcesContent":["// import { PortableText } from \"next-sanity\"; //test with the next-sanity\nimport { PortableText } from \"@portabletext/react\";\nimport { getPageData } from \"../../../../sanity/schemas/sanity-utils\";\n\nexport const revalidate = 30; // Revalidate every 30 seconds\n\nexport default async function Page({ params }) {\n    const { slug } = await params;\n    const pageData = await getPageData(slug);\n\n    if (!pageData) {\n        return <div>Page not found</div>; // Basic error handling\n    }\n\n    console.log(\"Full Page Data:\", pageData);\n    console.log(\"Contact Info Data:\", pageData.contactInfo);\n\n    return(\n        <div className=\"pageContainer\">\n            <header>\n                <h1 className=\"pageTitle\">{pageData.pageTitle}</h1>\n                <div className=\"pageDescription\"><PortableText value ={pageData.pageDescription}/></div>\n                <div className=\"contactInfo\"><PortableText value ={pageData.contactInfo}/></div>\n            </header>\n            \n            \n            <div className=\"pageContent\">\n                {/* Team Members Page */}\n                \n                {pageData.teamMembers && pageData.teamMembers.length > 0 && (\n                <div className=\"gallery\">\n                    {pageData.teamMembers && pageData.teamMembers.map((member) => (\n                        <div className=\"gallery-panel\" key={member._id}>\n                            <div className=\"panel-content\">\n                            <div className=\"member-title\">\n                                <span>\n                                {member.talentPosition} <i>{member.city}</i>\n                                </span>\n                            </div>\n                            {member.image?.asset?.url && (\n                                <img\n                                src={member.image.asset.url}\n                                alt={member.image.alt || member.fullName}\n                                />\n                            )}\n                            <div className=\"text-info\">\n                                <div className=\"fullname\">{member.fullName}</div>\n                            </div>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n                )}\n\n                {/* Projects Page */}\n\n                {pageData.projects && pageData.projects.length > 0 && (\n                    <div className=\"workImages\">\n                    {(() => {\n                      const allProjectImages = [];\n                      pageData.projects.forEach((project) => {\n                        const images = [project.mainImage, ...(project.projectImages || [])].filter(Boolean);\n                        allProjectImages.push(...images); // Add all images from each project to a single array\n                      });\n                  \n                      // Function to shuffle an array (Fisher-Yates algorithm)\n                      const shuffleArray = (array) => {\n                        const newArray = [...array];\n                        for (let i = newArray.length - 1; i > 0; i--) {\n                          const j = Math.floor(Math.random() * (i + 1));\n                          [newArray[i], newArray[j]] = [newArray[j], newArray[i]];\n                        }\n                        return newArray;\n                      };\n                  \n                      const shuffledAllImages = shuffleArray(allProjectImages);\n                  \n                      return shuffledAllImages\n                        .slice(0, 16) // Take only the first 16 elements\n                        .map((image, index) => (\n                          <img\n                            key={image?.asset?.url || `all-${index}`}\n                            src={image?.asset?.url || ''}\n                            alt={image?.alt || 'Project Image'}\n                            className=\"workProductImage\"\n                          />\n                        ));\n                    })()}\n                  </div>\n                )}\n\n                <footer>\n                    {pageData?.pageNote && (\n                        <div className=\"pageNote\">\n                            <div className=\"leftSide\">\n                            {pageData.pageNote.workTitle && (\n                                <div className=\"workSection\">\n                                <h2 className=\"pageNoteTitle\">{pageData.pageNote.workTitle}</h2>\n                                {pageData.pageNote.workDescription && (\n                                    <p className=\"pageNoteText\">{pageData.pageNote.workDescription}</p>\n                                )}\n                                </div>\n                            )}\n                            {pageData.pageNote.connectTitle && (\n                                <div className=\"connectSection\">\n                                <h2 className=\"pageNoteTitle\">{pageData.pageNote.connectTitle}</h2>\n                                {pageData.pageNote.connectLinks &&\n                                    pageData.pageNote.connectLinks.map((link, index) => (\n                                    <a\n                                        key={index}\n                                        href={link.linkUrl}\n                                        className=\"contactLink\"\n                                        target={link.openNewTab ? \"_blank\" : undefined}\n                                        rel={link.openNewTab ? \"noopener noreferrer\" : undefined}\n                                    >\n                                        {link.linkTitle}\n                                    </a>\n                                    ))}\n                                </div>\n                            )}\n                            </div>\n                            {pageData.pageNote.copyrightText && (\n                            <div className=\"copyRight\"><p className=\"copyRightText\"> <b>{pageData.pageNote.copyrightBrandName}</b> {pageData.pageNote.copyrightText} {pageData.pageNote.copyrightYear} {pageData.pageNote.copyrightBrandName}</p>\n                            </div>\n                            )}\n                        </div>\n                    )}\n                </footer>\n            </div>\n\n        </div>\n    )\n}"],"names":[],"mappings":"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","debugId":null}}]
}